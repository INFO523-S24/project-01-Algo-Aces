[
  {
    "objectID": "proposal.html",
    "href": "proposal.html",
    "title": "Algo Aces Project Proposal",
    "section": "",
    "text": "import numpy as np\nimport pandas as pd\nimport requests"
  },
  {
    "objectID": "proposal.html#dataset",
    "href": "proposal.html#dataset",
    "title": "Algo Aces Project Proposal",
    "section": "Dataset",
    "text": "Dataset\n\ndf = pd.read_csv(\"data/fastfood_calories.csv\")\ndf.head()\n\n\n\n\n\n\n\n\nUnnamed: 0\nrestaurant\nitem\ncalories\ncal_fat\ntotal_fat\nsat_fat\ntrans_fat\ncholesterol\nsodium\ntotal_carb\nfiber\nsugar\nprotein\nvit_a\nvit_c\ncalcium\nsalad\n\n\n\n\n0\n1\nMcdonalds\nArtisan Grilled Chicken Sandwich\n380\n60\n7\n2.0\n0.0\n95\n1110\n44\n3.0\n11\n37.0\n4.0\n20.0\n20.0\nOther\n\n\n1\n2\nMcdonalds\nSingle Bacon Smokehouse Burger\n840\n410\n45\n17.0\n1.5\n130\n1580\n62\n2.0\n18\n46.0\n6.0\n20.0\n20.0\nOther\n\n\n2\n3\nMcdonalds\nDouble Bacon Smokehouse Burger\n1130\n600\n67\n27.0\n3.0\n220\n1920\n63\n3.0\n18\n70.0\n10.0\n20.0\n50.0\nOther\n\n\n3\n4\nMcdonalds\nGrilled Bacon Smokehouse Chicken Sandwich\n750\n280\n31\n10.0\n0.5\n155\n1940\n62\n2.0\n18\n55.0\n6.0\n25.0\n20.0\nOther\n\n\n4\n5\nMcdonalds\nCrispy Bacon Smokehouse Chicken Sandwich\n920\n410\n45\n12.0\n0.5\n120\n1980\n81\n4.0\n18\n46.0\n6.0\n20.0\n20.0\nOther\n\n\n\n\n\n\n\n\nDataset Description:\n&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD The “Fast Food Calories” dataset comprises nutritional information for various food items offered by eight distinct fast-food outlets. Each outlet’s menu is detailed, encompassing items such as burgers, fries, beverages, and salads. The dataset includes essential nutritional metrics like calories, fat content, protein, and carbohydrates, allowing for in-depth analysis and comparison of the health implications of different menu choices."
  },
  {
    "objectID": "proposal.html#timeline-for-project-proposal",
    "href": "proposal.html#timeline-for-project-proposal",
    "title": "Algo Aces Project Proposal",
    "section": "Timeline for Project Proposal",
    "text": "Timeline for Project Proposal\nWeek of 05 Feb:\nPrepare the proposal for peer review. Participate in peer reviews for other groups.\nWeek of 12 Feb:\nRevise the proposal based on feedback from both peers and the instructor.\nMake necessary adjustments to improve the proposal’s quality and clarity.:\nWeek of February 19:\nAssign duties to team members.\nExplore data on your own and start working on preliminary visualization ideas for comparison.\nStart formatting the slide deck for the presentation.\nWeek of February 26 -\nComplete the plot visualizations.\nCompleting the write-ups\nFinalizing the interpretations\nBeginning the presentation\nWeek of March 6th:\nThe presentation draft\nTidying up the website\n⁠Completing the presentation draft ⁠\nReviewing the internal project\nMarch 10th:\nProject is completed and the project is submitted. &gt;&gt;&gt;&gt;&gt;&gt;&gt; 3deaed508c25a03569fe8b5fc05e585986a23925"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Project title",
    "section": "",
    "text": "Abstract\n\nIntroduction\n\n\nIntroducing the dataset\nThe “Fast Food Calories” dataset comprises nutritional information for various food items offered by eight distinct fast-food outlets. Each outlet’s menu is detailed, encompassing items such as burgers, fries, beverages, and salads. The dataset’s sources include: research institutions, open data repositories(tidytuesday) and compiled data sets from various sources. The dataset contains multiple columns representing different attributes of fast-food items, such as name, restaurant, category, calorie count, fat content, protein content, carbohydrate content, etc. The number of rows corresponds to the number of individual fast-food items for each restaurant in the dataset.\n\n\n\nExploratory Data Analysis\n\nQuestion 1\nWhat is the average calorie consumption per visit at each fast food restaurant or outlet?\nIntroduction\nThis question allows us to grasp the average calorie intake per visit across different fast food restaurants, providing insights into their nutritional profiles. By analysing the typical calorie intake, we can learn a lot about the energy content of foods served in popular fast food outlets. Examining average calorie consumption each visit acts as a realistic nutritional guide for people who are conscious of their meal choices, providing helpful information in choosing healthier eating habits. It can also be an important resource for government bodies concerned with public health, giving information that can be used to develop policies aiming at increasing nutritional standards and fighting diet-related health concerns in communities.\n\n\nApproach\nWe’ll use the “groupby.describe()” method to create a summary table with contains statistical information like mean, mode, median, minimum, and maximum calorie content for each item in every restaurant. The variables used for this analysis are Restaurant, Item, Total Fat, and Calories. To calculate the average calories consumed per person, we will add the total calories from all items in each restaurant and divide by the number of items. This data is visualised using a half-violin plot, which will provide a clear picture of the distribution of average calorie intake per person across different eateries, allowing for a better understanding and interpretation of nutrition patterns.\n\n\nAnalysis\n\n\nPart 1\n\n\nCode\nimport numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\n# Load the dataset\ndf = pd.read_csv(\"data/fastfood_calories.csv\")\n\n# Group by restaurant and calculate the median calories per visit\nmedian_calories_per_visit = df.groupby('restaurant')['calories'].median()\n\n# Print summary statistics\nsummary_table = df.groupby('restaurant')['calories']\n\n# Sort the DataFrame by restaurant names\ndf_sorted = df.sort_values(by='restaurant')\n\n# Plot half violin plot\nplt.figure(figsize=(12, 8))\nviolin = sns.violinplot(x='calories', y='restaurant', data=df_sorted, inner='quartile', cut=0, palette='husl')\nplt.title('Distribution of Calories per Visit by Restaurant', fontweight='bold')\nplt.xlabel('Calories', fontweight='bold')\nplt.ylabel('Restaurant', fontweight='bold')\n\n# Create legend using violinplot handles\nplt.legend(title='Median Calories', handles=violin.collections, labels=[f\"{int(median_calories)} calories\" \n                                                                         for median_calories in median_calories_per_visit],\n           loc='upper left', bbox_to_anchor=(1, 1), prop={'weight': 'bold'})\n\nplt.show()\n\nprint(\"Summary Table:\")\nsummary_table.describe( )\n\n\n\n\n\n\n\n\n\nSummary Table:\n\n\n\n\n\n\n\n\n\ncount\nmean\nstd\nmin\n25%\n50%\n75%\nmax\n\n\nrestaurant\n\n\n\n\n\n\n\n\n\n\n\n\nArbys\n55.0\n532.727273\n210.338832\n70.0\n360.0\n550.0\n690.0\n1030.0\n\n\nBurger King\n70.0\n608.571429\n290.418417\n190.0\n365.0\n555.0\n760.0\n1550.0\n\n\nChick Fil-A\n27.0\n384.444444\n220.494782\n70.0\n220.0\n390.0\n480.0\n970.0\n\n\nDairy Queen\n42.0\n520.238095\n259.337694\n20.0\n350.0\n485.0\n630.0\n1260.0\n\n\nMcdonalds\n57.0\n640.350877\n410.696120\n140.0\n380.0\n540.0\n740.0\n2430.0\n\n\nSonic\n53.0\n631.698113\n300.881627\n100.0\n410.0\n570.0\n740.0\n1350.0\n\n\nSubway\n96.0\n503.020833\n282.220965\n50.0\n287.5\n460.0\n740.0\n1160.0\n\n\nTaco Bell\n115.0\n443.652174\n184.344883\n140.0\n320.0\n420.0\n575.0\n880.0\n\n\n\n\n\n\n\n\n\nCode\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\n# Load the dataset into a DataFrame\ncalories_df = pd.read_csv('data/fastfood_calories.csv')\n\n# Calculate median calories for each restaurant\nmedian_calories = calories_df.groupby('restaurant')['calories'].median().reset_index()\n\n# Set the color palette\ncolors = sns.color_palette(\"husl\", len(median_calories['restaurant']))\n\n# Set the figure size\nplt.figure(figsize=(10, 6))\n\n# Create the line plot with inverted triangles and white background\nfor i, restaurant in enumerate(median_calories['restaurant']):\n    plt.plot(restaurant, median_calories.loc[i, 'calories'], marker='v', markersize=12, color=colors[i], label=restaurant)\n    plt.text(restaurant, median_calories.loc[i, 'calories'] - 15, f\"{median_calories.loc[i, 'calories']:.0f}\", ha='center', fontsize=10, color='black')\n\n# Add title and labels\nplt.title('Average Calories per visit to a Restaurant', fontsize=16)\nplt.xlabel('Restaurant', fontsize=14)\nplt.ylabel('Average Calories per visit', fontsize=14)\n\n# Rotate x-axis labels for better readability (optional)\nplt.xticks(rotation=45, ha='right')\n\n# Set y-axis limit\nplt.ylim(350, 650)\n\n# Set y-axis ticks with step 50\nplt.yticks(range(350, 651, 50))\n\n# Remove gridlines\nplt.grid(False)\n\n\n\n\n\n\n\n\n\n\n\nQuestion 2\nHow do different food item categories vary in protien-fat ratio and do they meet up to the standards of the health metric?\n\n\nIntroduction\nThe goal of this question is to examine the wide range of protein-fat ratios seen in different dietary categories and determine how well they correspond with recognized health measures. Examining the variations in protein-fat proportions among different types of food items is crucial for evaluating their nutritional value. By analyzing these ratios and comparing them with health benchmarks, we can identify food categories that meet recommended nutritional criteria and those that may benefit from adjustments to optimize health benefits. Through this analysis, we aim to gain a deeper understanding of the complex interplay between dietary composition and its impact on health outcomes.\n\n\nApproach\n\n\nAnalysis\n\n\nPart 1\n\n\nCode\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\n# Load the dataset into a DataFrame\ncalories_df = pd.read_csv('data/fastfood_calories.csv')\n\n# Define calorie-per-gram values for fat and protein\ncalories_per_gram_fat = 9  # Fat provides 9 calories per gram\ncalories_per_gram_protein = 4  # Protein provides 4 calories per gram\n\n# Calculate calories from protein and fat\ncalories_df['cal_protein'] = calories_df['protein'] * calories_per_gram_protein\ncalories_df['cal_fat'] = calories_df['total_fat'] * calories_per_gram_fat\n\n# Calculate total calories\ncalories_df['total_calories'] = calories_df['cal_protein'] + calories_df['cal_fat']\n\n# Calculate Protein_fat_ratio\ncalories_df['Protein_fat_ratio'] = calories_df['cal_protein'] / calories_df['total_calories']\n\n# Calculate Q2 (median) for each restaurant\nmedian_protein_fat_ratio = calories_df.groupby('restaurant')['Protein_fat_ratio'].median().reset_index()\n\n# Set custom color palette\ncolors = sns.color_palette(\"husl\", n_colors=len(median_protein_fat_ratio))\n\n# Create a half violin plot to visualize the median Protein_fat_ratio for each restaurant\nplt.figure(figsize=(12, 8))\nsns.violinplot(x='Protein_fat_ratio', y='restaurant', data=calories_df, inner='quartile', linewidth=1.5, cut=0, split=True, palette=colors)\n\n# Add Q2 values (medians) to the plot without labels\nfor i in range(len(median_protein_fat_ratio)):\n    plt.text(median_protein_fat_ratio['Protein_fat_ratio'][i], i, f\"{median_protein_fat_ratio['Protein_fat_ratio'][i]:.2f}\", fontsize=10, va='center', ha='right', color='black')\n\n# Add title and labels\nplt.title('Protein-Fat Ratio by Restaurant', fontsize=16)\nplt.xlabel('Protein-Fat Ratio', fontsize=14)\nplt.ylabel('Restaurant', fontsize=14)\n\n# Customize y-axis labels\nplt.yticks(fontsize=12)\n\n# Show the plot\nplt.grid(True, linestyle='--', alpha=0.7)\nplt.tight_layout()\nplt.show()\n\n\n\n\n\n\n\n\n\nThe table below represents the health metric for the fast food restaurants based on the protein fat ratio.\n\n\nCode\nimport matplotlib.pyplot as plt\n\n# Define data\nprotein_fat_ratios = [0.35, 0.26, 0.49, 0.26, 0.33, 0.26, 0.47, 0.26]\nrestaurants = ['Arbys', 'Burger King', 'Chick Fil-A', 'Dairy Queen', 'McDonalds', 'Sonic', 'Subway', 'Taco Bell']\n\n# Create the plot\nplt.figure(figsize=(10, 6))\n\n# Plot points for protein fat ratios for each restaurant\nfor i, restaurant in enumerate(restaurants):\n    plt.scatter([protein_fat_ratios[i]], [restaurant], label=restaurant, marker='o')\n\n# Shade the regions\nplt.axvspan(0.25, 0.40, color='lightcoral', alpha=0.5, label='Needs Improvement')\nplt.axvspan(0.40, 0.50, color='lightgreen', alpha=0.5, label='Healthy')\n\n# Labels and legend\nplt.xlabel('Protein Fat Ratio')\nplt.ylabel('Restaurants')\nplt.title('Protein Fat Ratio of Restaurants')\n\n# Customize y-axis labels\nplt.yticks(restaurants)\n\n# Show plot\nplt.grid(True, linestyle='--', alpha=0.7)\nplt.tight_layout()\n#plt.legend()\nplt.show()\n\n\n\n\n\n\n\n\n\nThe code chunk below represents the summary statistics of the food categories of the data set using the protein fat ratio\n\n\nCode\nimport pandas as pd\nimport numpy as np\ncalories_df = pd.read_csv(\"data/fastfood_calories.csv\")\n#below lies the dictionary for the categorisation of the food items into groups\ncategories = {\n    'Burgers': ['Burger', 'Cheeseburger', 'McNuggets', 'Quarter Pounder'],\n    'Chicken Sandwiches': ['Chicken Sandwich', 'Grilled Chicken', 'Crispy Chicken'],\n    'Salads': ['Salad'],\n    'Chicken Nuggets/Tenders': ['Chicken McNuggets', 'Chicken Tenders'],\n    'Hot Dogs': ['Hot Dog'],\n    'Subway Items': ['Subway'],\n    'Tacos/Burritos': ['Taco', 'Burrito', 'Nachos']\n}\n##the function below was used to group the food groups based on the presence of certain words in the dictionary\ndef categorize_item(item):\n    for category, keywords in categories.items():\n        if any(keyword.lower() in item.lower() for keyword in keywords):\n            return category\n    return 'Other'\n  \ncalories_df['categorized_food_items'] = calories_df['item'].apply(categorize_item)\n###creating the protein fat ratio for the columns in the dataset\n# Define calorie-per-gram values for fat and protein\ncalories_per_gram_fat = 9  # Fat provides 9 calories per gram\ncalories_per_gram_protein = 4  # Protein provides 4 calories per gram\n\n# Calculate calories from protein and fat\ncalories_df['cal_protein'] = calories_df['protein'] * calories_per_gram_protein\ncalories_df['cal_fat'] = calories_df['total_fat'] * calories_per_gram_fat\n\n# Calculate total calories\ncalories_df['total_calories'] = calories_df['cal_protein'] + calories_df['cal_fat']\n\n# Calculate Protein_fat_ratio\ncalories_df['Protein_fat_ratio'] = calories_df['cal_protein'] / calories_df['total_calories']\n\n\nsummary_stats = calories_df.groupby('categorized_food_items')['Protein_fat_ratio']\n\nsummary_stats.describe( )\n\n\n\n\n\n\n\n\n\ncount\nmean\nstd\nmin\n25%\n50%\n75%\nmax\n\n\ncategorized_food_items\n\n\n\n\n\n\n\n\n\n\n\n\nBurgers\n63.0\n0.292165\n0.042541\n0.216471\n0.265655\n0.287770\n0.322581\n0.419355\n\n\nChicken Nuggets/Tenders\n3.0\n0.383500\n0.008621\n0.375510\n0.378932\n0.382353\n0.387495\n0.392638\n\n\nChicken Sandwiches\n81.0\n0.378670\n0.159336\n0.092742\n0.267223\n0.346604\n0.476744\n0.836364\n\n\nHot Dogs\n3.0\n0.223662\n0.010229\n0.213592\n0.218471\n0.223350\n0.228696\n0.234043\n\n\nOther\n252.0\n0.347719\n0.130331\n0.123515\n0.252846\n0.320143\n0.400865\n0.697987\n\n\nSalads\n43.0\n0.403233\n0.215495\n0.095694\n0.258310\n0.307692\n0.561957\n1.000000\n\n\nSubway Items\n6.0\n0.462131\n0.196619\n0.233184\n0.295307\n0.481675\n0.624068\n0.671533\n\n\nTacos/Burritos\n63.0\n0.299672\n0.075370\n0.170213\n0.250000\n0.289474\n0.339153\n0.550000"
  },
  {
    "objectID": "presentation.html#quarto",
    "href": "presentation.html#quarto",
    "title": "Fast Food Calories",
    "section": "Quarto",
    "text": "Quarto\n\nThe presentation is created using the Quarto CLI\n## sets the start of a new slide"
  },
  {
    "objectID": "presentation.html#layouts",
    "href": "presentation.html#layouts",
    "title": "Fast Food Calories",
    "section": "Layouts",
    "text": "Layouts\nYou can use plain text\n\n\n\nor bullet points1\n\n\nor in two columns\n\n\n\nlike\nthis\n\nAnd add footnotes"
  },
  {
    "objectID": "presentation.html#code",
    "href": "presentation.html#code",
    "title": "Fast Food Calories",
    "section": "Code",
    "text": "Code\n\n\n                            OLS Regression Results                            \n==============================================================================\nDep. Variable:                    mpg   R-squared:                       0.073\nModel:                            OLS   Adj. R-squared:                  0.070\nMethod:                 Least Squares   F-statistic:                     30.59\nDate:                Mon, 11 Mar 2024   Prob (F-statistic):           5.84e-08\nTime:                        17:59:31   Log-Likelihood:                -1346.4\nNo. Observations:                 392   AIC:                             2697.\nDf Residuals:                     390   BIC:                             2705.\nDf Model:                           1                                         \nCovariance Type:            nonrobust                                         \n==============================================================================\n                 coef    std err          t      P&gt;|t|      [0.025      0.975]\n------------------------------------------------------------------------------\nconst         35.8015      2.266     15.800      0.000      31.347      40.257\nspeed       -354.7055     64.129     -5.531      0.000    -480.788    -228.623\n==============================================================================\nOmnibus:                       27.687   Durbin-Watson:                   0.589\nProb(Omnibus):                  0.000   Jarque-Bera (JB):               18.976\nSkew:                           0.420   Prob(JB):                     7.57e-05\nKurtosis:                       2.323   Cond. No.                         169.\n==============================================================================\n\nNotes:\n[1] Standard Errors assume that the covariance matrix of the errors is correctly specified."
  },
  {
    "objectID": "presentation.html#plots",
    "href": "presentation.html#plots",
    "title": "Fast Food Calories",
    "section": "Plots",
    "text": "Plots"
  },
  {
    "objectID": "presentation.html#plot-and-text",
    "href": "presentation.html#plot-and-text",
    "title": "Fast Food Calories",
    "section": "Plot and text",
    "text": "Plot and text\n\n\n\nSome text\ngoes here"
  },
  {
    "objectID": "presentation.html#tables",
    "href": "presentation.html#tables",
    "title": "Fast Food Calories",
    "section": "Tables",
    "text": "Tables\nIf you want to generate a table, make sure it is in the HTML format (instead of Markdown or other formats), e.g.,\n\n\n\n\n\n\n\n\n\n\n\n\nspecies\n\n\n\nisland\n\n\n\nbill_length_mm\n\n\n\nbill_depth_mm\n\n\n\nflipper_length_mm\n\n\n\nbody_mass_g\n\n\n\nsex\n\n\n\n\n\n\n\n\n\n\n\n0\n\n\n\nAdelie\n\n\n\nTorgersen\n\n\n\n39.1\n\n\n\n18.7\n\n\n\n181.0\n\n\n\n3750.0\n\n\n\nMale\n\n\n\n\n\n\n\n1\n\n\n\nAdelie\n\n\n\nTorgersen\n\n\n\n39.5\n\n\n\n17.4\n\n\n\n186.0\n\n\n\n3800.0\n\n\n\nFemale\n\n\n\n\n\n\n\n2\n\n\n\nAdelie\n\n\n\nTorgersen\n\n\n\n40.3\n\n\n\n18.0\n\n\n\n195.0\n\n\n\n3250.0\n\n\n\nFemale\n\n\n\n\n\n\n\n4\n\n\n\nAdelie\n\n\n\nTorgersen\n\n\n\n36.7\n\n\n\n19.3\n\n\n\n193.0\n\n\n\n3450.0\n\n\n\nFemale\n\n\n\n\n\n\n\n5\n\n\n\nAdelie\n\n\n\nTorgersen\n\n\n\n39.3\n\n\n\n20.6\n\n\n\n190.0\n\n\n\n3650.0\n\n\n\nMale"
  },
  {
    "objectID": "presentation.html#images",
    "href": "presentation.html#images",
    "title": "Fast Food Calories",
    "section": "Images",
    "text": "Images\n\nImage credit: Danielle Navarro, Percolate."
  },
  {
    "objectID": "presentation.html#math-expressions",
    "href": "presentation.html#math-expressions",
    "title": "Fast Food Calories",
    "section": "Math Expressions",
    "text": "Math Expressions\nYou can write LaTeX math expressions inside a pair of dollar signs, e.g. $\\alpha+\\beta$ renders \\(\\alpha + \\beta\\). You can use the display style with double dollar signs:\n$$\\bar{X}=\\frac{1}{n}\\sum_{i=1}^nX_i$$\n\\[\n\\bar{X}=\\frac{1}{n}\\sum_{i=1}^nX_i\n\\]\nLimitations:\n\nThe source code of a LaTeX math expression must be in one line, unless it is inside a pair of double dollar signs, in which case the starting $$ must appear in the very beginning of a line, followed immediately by a non-space character, and the ending $$ must be at the end of a line, led by a non-space character;\nThere should not be spaces after the opening $ or before the closing $."
  },
  {
    "objectID": "presentation.html#feeling-adventurous",
    "href": "presentation.html#feeling-adventurous",
    "title": "Fast Food Calories",
    "section": "Feeling adventurous?",
    "text": "Feeling adventurous?\n\nYou are welcomed to use the default styling of the slides. In fact, that’s what I expect majority of you will do. You will differentiate yourself with the content of your presentation.\nBut some of you might want to play around with slide styling. Some solutions for this can be found at https://quarto.org/docs/presentations/revealjs."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "This project was developed by [Team Name] For INFO 523 - Data Mining and Discovery at the University of Arizona, taught by Dr. Greg Chism. The team is comprised of the following team members.\n\nTeam member 1: One sentence description of Team member 1 (e.g., year, major, etc.).\nTeam member 2: One sentence description of Team member 2 (e.g., year, major, etc.).\nTeam member 3: One sentence description of Team member 3 (e.g., year, major, etc.).\nTeam member 4: One sentence description of Team member 4 (e.g., year, major, etc.)."
  }
]